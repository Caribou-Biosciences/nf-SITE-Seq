{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/Caribou-Biosciences/nf-SITE-Seq/main/nextflow_schema.json",
    "title": "Caribou-Biosciences/nf-SITE-Seq pipeline parameters",
    "description": "Nextflow pipeline for processing and analyzing data produced by the SITE-SeqÂ® assay",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "file_server_url": {
                    "type": "string",
                    "description": "The URL to a file server that serves files present in `--outdir`. Used to generate URLs pointing to output files within IGV sessions.",
                    "fa_icon": "fas fa-globe",
                    "hidden": false
                },
                "file_server_prefixes": {
                    "type": "string",
                    "description": "A comma-separated string of path prefixes to replace in output file paths with `--file_server_url`. Used to generate URLs pointing to output files within IGV sessions.",
                    "fa_icon": "fas fa-globe",
                    "hidden": false
                },
                "use_relative_igv_paths": {
                    "type": "boolean",
                    "description": "Whether to use relative paths when defining file paths in IGV session files. This parameter is ignored if `--file_server_url` is set.",
                    "fa_icon": "fas fa-bezier-curve",
                    "hidden": false
                },
                "save_bowtie2_index": {
                    "type": "boolean",
                    "description": "Whether to save the Bowtie2 index created during pipeline execution to the output folder. Only relevant when `--bowtie2_index` is not specified.",
                    "fa_icon": "fas fa-floppy-disk",
                    "default": false,
                    "hidden": false
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "bam_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where BAM files will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "bigwig_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where BigWig files will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "fastp_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where FastP reports will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "fasta_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the genome FASTA will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "igv_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where IGV session files will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "dist_tsv_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where distribution TSVs will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "site_tsv_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where reported site TSVs will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "report_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where analysis reports will be saved. Auto-generated based on outdir.",
                    "fa_icon": "fas fa-folder-open",
                    "hidden": true
                },
                "empty_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to a file representing an empty input. Used internally by the pipeline.",
                    "default": "${projectDir}/assets/EMPTY",
                    "fa_icon": "fas fa-file",
                    "hidden": true
                }
            }
        },
        "analysis_options": {
            "title": "Analysis options",
            "type": "object",
            "fa_icon": "fas fa-magnifying-glass",
            "description": "Parameters affecting analysis.",
            "properties": {
                "apply_normalization": {
                    "type": "boolean",
                    "description": "Whether to normalize alignment counts by the total number of alignments analyzed. Normalization is done per-million.",
                    "fa_icon": "fas fa-scale-balanced",
                    "default": true
                },
                "use_umis": {
                    "type": "boolean",
                    "description": "Whether to use UMIs to deduplicate alignments.",
                    "fa_icon": "fas fa-filter",
                    "default": true
                },
                "umi_length": {
                    "type": "integer",
                    "description": "The length of the sequence to take from the start of read 2 as the UMI.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": 7,
                    "hidden": true
                },
                "test_pval_calling_thresh": {
                    "type": "number",
                    "description": "The p-value threshold below which sites will be called.",
                    "fa_icon": "fas fa-ruler-vertical",
                    "default": 0.00001
                },
                "test_pval_reporting_thresh": {
                    "type": "number",
                    "description": "The p-value threshold below which sites will be reported, i.e. included in the final outputs.",
                    "fa_icon": "fas fa-ruler-vertical",
                    "default": 0.001
                },
                "ctrl_noise_pval_calling_thresh": {
                    "type": "number",
                    "description": "The control background p-value threshold below which sites will not be called due to high background, regardless of the test p-value.",
                    "fa_icon": "fas fa-ruler-vertical",
                    "default": 0.005
                },
                "include_noise_pval_fails": {
                    "type": "boolean",
                    "description": "Whether to include sites that fail the high-background control filter in the output.",
                    "fa_icon": "fas fa-filter",
                    "default": false
                },
                "umi_base_qual_thresh": {
                    "type": "integer",
                    "description": "The Q-score threshold to use when filtering UMIs. At most --max_lowq_umi_bases UMI bases can be below this threshold, otherwise the read is filtered out.",
                    "fa_icon": "fas fa-filter",
                    "default": 20
                },
                "max_lowq_umi_bases": {
                    "type": "integer",
                    "description": "The maximum number of UMI bases with a Q-score below --umi_base_qual_thresh before filtering out a read.",
                    "fa_icon": "fas fa-filter",
                    "default": 1
                },
                "min_map_qual": {
                    "type": "integer",
                    "description": "The minimum mapping quality that an alignment must have to be included in the analysis.",
                    "fa_icon": "fas fa-filter",
                    "default": 5
                },
                "min_aln_length": {
                    "type": "integer",
                    "description": "The minimum reference length that an alignment must have to be included in the analysis.",
                    "fa_icon": "fas fa-filter",
                    "default": 20
                },
                "max_clipping": {
                    "type": "integer",
                    "description": "The maximum allowed clipping at the start of the read for an alignment to be included in the analysis.",
                    "fa_icon": "fas fa-filter",
                    "default": 0
                },
                "stat_window": {
                    "type": "integer",
                    "description": "The window size (in base pairs) used to calculate signal statistics.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": 5
                },
                "peak_window": {
                    "type": "integer",
                    "description": "The window size (in base pairs) used to identify peaks of the signal statistic.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": 5
                },
                "control_noise_window": {
                    "type": "integer",
                    "description": "The window size (in base pairs) used to calculate high-background signals in the control samples.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": 150
                },
                "agg_peak_window": {
                    "type": "integer",
                    "description": "The window size (in base pairs) used to aggregate peaks across RNP concentrations.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "default": 10
                },
                "motif_search_factor": {
                    "type": "integer",
                    "description": "Used to define the size of the window around a signal peak to search for motif sequences. This value is multiplied by the length of the on-target motif which determines how far upstream and downstream from a peak to search for motif sequences.",
                    "fa_icon": "fas fa-magnifying-glass",
                    "default": 1
                },
                "motif_match_score": {
                    "type": "integer",
                    "description": "The score for a matched base when searching for motif sequences.",
                    "fa_icon": "fas fa-plus",
                    "default": 1
                },
                "motif_mismatch_pen": {
                    "type": "integer",
                    "description": "The penalty for a mismatched base when searching for motif sequences. Should be positive.",
                    "fa_icon": "fas fa-minus",
                    "default": 1
                },
                "motif_gap_pen": {
                    "type": "integer",
                    "description": "The penalty for a gap when searching for motif sequences. Should be positive.",
                    "fa_icon": "fas fa-minus",
                    "default": 8
                },
                "subsample_fastqs": {
                    "type": "boolean",
                    "description": "Whether to downsample input FASTQs before analysis.",
                    "fa_icon": "fas fa-down-long",
                    "default": false
                },
                "subsample_target_reads": {
                    "type": "integer",
                    "description": "The target number of reads for each FASTQ when performing downsampling.",
                    "fa_icon": "fas fa-bullseye"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "required": ["fasta"],
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory*. If you don't have a Bowtie2 index available this will be generated for you automatically.",
                    "fa_icon": "far fa-file-code"
                },
                "bowtie2_index": {
                    "type": "string",
                    "format": "path",
                    "description": "The path to a pre-built Bowtie2 index. Should be built from the same genome provided by --fasta. If not provided, an index will be created.",
                    "fa_icon": "fas fa-bezier-curve"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/analysis_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
