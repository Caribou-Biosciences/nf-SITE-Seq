/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        enabled: false
    ]

    withName: PUBLISHGENOMEFASTA {
        publishDir = [
            enabled: true,
            path: params.fasta_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BOWTIE2_BUILD {
        container = "quay.io/biocontainers/bowtie2:2.5.2--py39h6fed5c7_0"
        publishDir = [
            enabled: params.save_bowtie2_index,
            path: { "${params.outdir}/bowtie2_index" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_FAIDX {
        container = "quay.io/biocontainers/samtools:1.21--h50ea8bc_0"
        publishDir = [
            enabled: true,
            path: params.fasta_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTP {
        container = "quay.io/biocontainers/fastp:0.23.4--h5f740d0_0"
        ext.args = "-l ${params.umi_length}"
        cpus   = { 1 * task.attempt }
        publishDir = [
            enabled: true,
            path: params.fastp_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.fastq.gz') ? null : filename }
        ]
    }

    withName: QUALITYFILTERUMIS {
        ext.args = "-U ${params.umi_length} -P ${params.umi_base_qual_thresh} -M ${params.max_lowq_umi_bases}"
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/qfilterumis" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.endsWith(".umi-filter-report.json") ? filename : null }
        ]
    }

    withName: UMITOOLS_EXTRACT {
        container = "quay.io/biocontainers/umi_tools:1.1.5--py39hf95cd2a_0"
        // Note that we use --bc-pattern instead of --bc-pattern2 because R1/R2 are switched before called umi-tools
        ext.args = "--extract-method=string --bc-pattern=NNNNNNN --quality-encoding=phred33"
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/umitools" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.endsWith(".umi_extract.log") ? filename : null }
        ]
    }

    withName: UMITOOLS_DEDUP {
        container = "quay.io/biocontainers/umi_tools:1.1.5--py39hf95cd2a_0"
        cpus = 1
        ext.prefix = { "${meta.id}.dedup" }
        publishDir = [
            [
                enabled: true,
                path: params.bam_dir,
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith(".bam") ? filename : null }
            ],
            [
                enabled: true,
                path: { "${params.outdir}/umitools" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith(".bam") ? null : filename }
            ]
        ]
    }

    withName: BOWTIE2_ALIGN {
        container = "quay.io/biocontainers/mulled-v2-ac74a7f02cebcfcc07d8e8d1d750af9c83b4d45a:f70b31a2db15c023d641c32f433fb02cd04df5a6-0"
        ext.args = '--local'
        publishDir = [
            [
                enabled: true,
                path: params.bam_dir,
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith(".bam") ? filename : null }
            ],
            [
                enabled: true,
                path: { "${params.outdir}/bowtie2" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith(".bam") ? null : filename }
            ]
        ]
    }

    withName: COUNTREADSTARTS {
        publishDir = [
            [
                enabled: true,
                path: params.dist_tsv_dir,
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith(".tsv.gz") ? filename : null }
            ],
            [
                enabled: true,
                path: { "${params.outdir}/countreadstarts" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith(".tsv.gz") ? null : filename }
            ]
        ]
    }

    withName: MERGEREADSTARTS {
        ext.prefix = { "${meta.id}.merged_starts" }
        publishDir = [
            enabled: true,
            path: params.dist_tsv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CALCULATEWINDOWSUMS {
        publishDir = [
            [
                enabled: true,
                path: params.dist_tsv_dir,
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith('.tsv.gz') ? filename : null }
            ],
            [
                enabled: true,
                path: { "${params.outdir}/calculatewindowsums" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') || filename.endsWith('.tsv.gz') ? null : filename }
            ]
        ]
    }

    withName: CALCULATEWINDOWDIFFS {
        publishDir = [
            enabled: true,
            path: params.dist_tsv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: EXTRACTWINDOWEDPEAKS {
        publishDir = [
            [
                enabled: true,
                path: params.dist_tsv_dir,
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith('.peaks.tsv.gz') ? filename : null }
            ],
            [
                enabled: true,
                path: { "${params.outdir}/extractwindowedpeaks" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith('.peaks.dist.tsv') ? filename : null }
            ]
        ]
    }

    withName: TSVTOBIGWIG {
        publishDir = [
            enabled: true,
            path: params.bigwig_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: SAMTOOLS_INDEX {
        container = "quay.io/biocontainers/samtools:1.21--h50ea8bc_0"
        publishDir = [
            enabled: true,
            path: params.bam_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: REPORTANDCALLSITES {
        publishDir = [
            enabled: true,
            path: params.site_tsv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: AGGREGATESITES {
        publishDir = [
            enabled: true,
            path: params.site_tsv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CREATEHTMLREPORT {
        ext.args = { "--pipeline_version ${workflow.manifest.version}" }
        publishDir = [
            enabled: true,
            path: params.report_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CONCATENATE_TSV_WITH_HEADER {
        publishDir = [
            enabled: true,
            path: params.report_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: IGV {
        container = "quay.io/biocontainers/python:3.8.3"
        publishDir = [
            enabled: true,
            path: params.igv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MULTIQC {
        container = "quay.io/biocontainers/multiqc:1.25.1--pyhdfd78af_0"
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            enabled: true,
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TABIX_TABIX {
        container = "quay.io/biocontainers/htslib:1.20--h5efdd21_2"
        ext.args = "-0 -b 2 -e 3 -f -S 1 -c '#'"
        publishDir = [
            enabled: true,
            path: params.dist_tsv_dir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: UNZIP {
        container = "quay.io/biocontainers/p7zip:16.02"
    }

    withName: SEQTK_SAMPLE {
        container = "quay.io/biocontainers/seqtk:1.4--he4a0461_1"
    }

}
